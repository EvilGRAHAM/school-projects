,value = Correlation
,-rowname
) %>%
rename(Row = rowname) %>%
ggplot(
aes(
x = Column
,y = Row
,fill = Correlation
)
) +
geom_raster() +
scale_fill_distiller(
type = "div"
,palette = "RdBu"
,limits = c(-1, 1)
) +
theme(
axis.text.x = element_text(angle = 90, hjust = 1)
,axis.title.x = element_blank()
,axis.title.y = element_blank()
)
banana_tidy <-
banana_data %>%
gather(
key = "Type"
,value = "Measurement"
,-ID
)
banana_tidy %>%
ggplot(aes(x = Measurement, colour = Type)) +
geom_histogram(
aes(y = ..density..)
,alpha = 0
,binwidth = function(x) nclass.FD(x)
) +
geom_density() +
facet_wrap(
~ Type
,scales = "free"
) +
scale_colour_brewer(
palette = "Dark2"
,type = "qual"
)
banana_data %>%
gather(
key = "Type"
,value = "Measurement"
,-ID
,-Weight
) %>%
ggplot(
aes(
x = Measurement
,y = Weight
,colour = Type
)
) +
geom_smooth(
method = "loess"
,se = FALSE
) +
geom_smooth(
method = "lm"
,se = FALSE
) +
geom_point() +
facet_wrap(
~ Type
,scales = "free_x"
) +
scale_colour_brewer(
palette = "Set2"
,type = "qual"
)
banana_data <-
banana_data %>%
mutate_at(
.vars = vars(Weight:Circumference)
,.funs = funs(log = log)
)
banana_reg_01 <-
banana_data %>%
lm(
Weight_log ~ Length_log + Radius_log + Circumference_log
,data = .
)
banana_reg_02 <-
banana_data %>%
lm(
Weight_log ~ Radius_log + Length_log
,data = .
)
banana_reg_03 <-
banana_data %>%
lm(
Weight_log ~ Radius_log
,data = .
)
banana_reg_04 <-
banana_data %>%
lm(
Weight_log ~ Length_log
,data = .
)
summary(banana_reg_01)
summary(banana_reg_02)
summary(banana_reg_03)
summary(banana_reg_04)
kable(anova(banana_reg_02, banana_reg_01))
kable(anova(banana_reg_03, banana_reg_01))
kable(anova(banana_reg_03, banana_reg_02))
<<<<<<< HEAD
banana_data <-
banana_data %>%
mutate_at(
.vars = vars(Weight:Circumference)
,.funs = funs(log = log)
)
banana_data <- %>%
banana_data <-
banana_data %>%
mutate_at(
.vars = vars(Weight:Circumference)
,.funs = funs(log = log)
)
banana_reg_01 <-
banana_data %>%
lm(
Weight_log ~ Length_log + Radius_log + Circumference_log
,data = .
)
banana_reg_02 <-
banana_data %>%
lm(
Weight_log ~ Radius_log + Length_log
,data = .
)
banana_reg_03 <-
banana_data %>%
lm(
Weight_log ~ Radius_log
,data = .
)
banana_reg_04 <-
banana_data %>%
lm(
Weight_log ~ Length_log
,data = .
)
summary(banana_reg_01)
summary(banana_reg_02)
summary(banana_reg_03)
summary(banana_reg_04)
kable(anova(banana_reg_02, banana_reg_01))
kable(anova(banana_reg_03, banana_reg_01))
kable(anova(banana_reg_03, banana_reg_02))
<<<<<<< HEAD
PvsA <-
tibble(
Predicted = exp(predict(banana_lasso_cvfit_01, newx = banana_ind, s = "lambda.min")[, "1"])
,Actual = banana_dep[, "Weight"]
) %>%
mutate(
AE = abs(Actual - Predicted)
,PAE = AE/Actual
)
PvsA %>%
summarize(
MAE = mean(AE)
,MPAE = mean(PAE)
)
library(xtable))
library(xtable)
lm(rnorm(100)~rnorm(100))
summary(lm(rnorm(100)~rnorm(100)))
summary(lm(rnorm(100)~5+rnorm(100)))
summary(lm(rnorm(100)~(5+rnorm(100)))_
summary(lm(rnorm(100)~(5+rnorm(100))))
summary(lm(1:100~rnorm(100)))
xtable(summary(lm(1:100~rnorm(100))))
install.packages(c("callr", "digest", "DT", "haven", "hms", "htmlwidgets", "knitr", "mvtnorm", "openssl", "Rcpp", "reprex", "tibble", "tidyr", "TTR", "viridisLite", "XLConnect", "XLConnectJars", "xml2", "zeallot"))
library(knitr)
knitr(summary(lm(1:100~rnorm(100))))
kabble(summary(lm(1:100~rnorm(100))))
knitr::kable(summary(lm(1:100~rnorm(100))))
knitr::kable(lm(1:100~rnorm(100)))
library(xtable, warn.conflicts = FALSE, quietly = TRUE)
library(pander)
pander(summary(banana_reg_01))
knitr::opts_chunk$set(echo = FALSE)
library(pander, warn.conflicts = FALSE, quietly = TRUE)
library(DAAG, warn.conflicts = FALSE, quietly = TRUE)
library(glmnet, warn.conflicts = FALSE, quietly = TRUE)
library(tidyverse, warn.conflicts = FALSE, quietly = TRUE)
library(magrittr, warn.conflicts = FALSE, quietly = TRUE)
library(ggfortify, warn.conflicts = FALSE, quietly = TRUE)
library(knitr, warn.conflicts = FALSE, quietly = TRUE)
library(stargazer, warn.conflicts = FALSE, quietly = TRUE)
set.seed(5609)
theme_minimal2 <- theme_minimal() %>%  theme_set()
theme_minimal2 <-
theme_update(
panel.border = element_rect(
linetype = "solid"
,colour = "grey92"
,fill = NA
)
,strip.background = element_rect(
linetype = "solid"
,colour = "grey92"
,fill = NA
)
)
cv.adaptive.glmnet <-
function(
x
,y
,alpha = 1
,gamma = 1
,weights
,nfolds = 10
,parallel = FALSE
,...
){
cv.alasso.ridge <-
cv.glmnet(
x = x
,y = y
,alpha = 0
,nfolds = nfolds
,parallel = parallel
)
cv.alasso.weights <- 1 / abs(coef(object = cv.alasso.ridge, s = "lambda.min", exact = TRUE)[-1, 1])^(gamma)
cv.alasso.model <-
cv.glmnet(
x = x
,y = y
,alpha = alpha
,penalty.factor = cv.alasso.weights
)
cv.alasso.model
}
banana_data <-
"mybanana.txt" %>%
read_tsv()
rsquare <- c()
for(i in 1:1000){
banana_cor <-
banana_data %>%
sample_n(10) %>%
select(
Weight
,Radius
,Length
# ,Circumference
) %>%
cor()
xy_vec <- banana_cor[2:3, 1]
C_mat <- banana_cor[2:3, 2:3]
rsquare[i] <- t(xy_vec) %*% solve(C_mat) %*% xy_vec
}
rsquare %>%
summary() %>%
kable()
rsquare %>%
summary() %>%
xtable()
rsquare %>%
summary() %>%
pander()
knitr::opts_chunk$set(echo = FALSE)
library(pander, warn.conflicts = FALSE, quietly = TRUE)
library(xtable, warn.conflicts = FALSE, quietly = TRUE)
library(DAAG, warn.conflicts = FALSE, quietly = TRUE)
library(glmnet, warn.conflicts = FALSE, quietly = TRUE)
library(tidyverse, warn.conflicts = FALSE, quietly = TRUE)
library(magrittr, warn.conflicts = FALSE, quietly = TRUE)
library(ggfortify, warn.conflicts = FALSE, quietly = TRUE)
library(knitr, warn.conflicts = FALSE, quietly = TRUE)
library(stargazer, warn.conflicts = FALSE, quietly = TRUE)
set.seed(5609)
theme_minimal2 <- theme_minimal() %>%  theme_set()
theme_minimal2 <-
theme_update(
panel.border = element_rect(
linetype = "solid"
,colour = "grey92"
,fill = NA
)
,strip.background = element_rect(
linetype = "solid"
,colour = "grey92"
,fill = NA
)
)
cv.adaptive.glmnet <-
function(
x
,y
,alpha = 1
,gamma = 1
,weights
,nfolds = 10
,parallel = FALSE
,...
){
cv.alasso.ridge <-
cv.glmnet(
x = x
,y = y
,alpha = 0
,nfolds = nfolds
,parallel = parallel
)
cv.alasso.weights <- 1 / abs(coef(object = cv.alasso.ridge, s = "lambda.min", exact = TRUE)[-1, 1])^(gamma)
cv.alasso.model <-
cv.glmnet(
x = x
,y = y
,alpha = alpha
,penalty.factor = cv.alasso.weights
)
cv.alasso.model
}
banana_data <-
"mybanana.txt" %>%
read_tsv()
print(xtable(summary(banana_reg_03)), type = "html")
knitr::opts_chunk$set(echo = FALSE)
library(pander, warn.conflicts = FALSE, quietly = TRUE)
library(stargazer, warn.conflicts = FALSE, quietly = TRUE)
library(DAAG, warn.conflicts = FALSE, quietly = TRUE)
library(glmnet, warn.conflicts = FALSE, quietly = TRUE)
library(tidyverse, warn.conflicts = FALSE, quietly = TRUE)
library(magrittr, warn.conflicts = FALSE, quietly = TRUE)
library(ggfortify, warn.conflicts = FALSE, quietly = TRUE)
library(knitr, warn.conflicts = FALSE, quietly = TRUE)
set.seed(5609)
theme_minimal2 <- theme_minimal() %>%  theme_set()
theme_minimal2 <-
theme_update(
panel.border = element_rect(
linetype = "solid"
,colour = "grey92"
,fill = NA
)
,strip.background = element_rect(
linetype = "solid"
,colour = "grey92"
,fill = NA
)
)
cv.adaptive.glmnet <-
function(
x
,y
,alpha = 1
,gamma = 1
,weights
,nfolds = 10
,parallel = FALSE
,...
){
cv.alasso.ridge <-
cv.glmnet(
x = x
,y = y
,alpha = 0
,nfolds = nfolds
,parallel = parallel
)
cv.alasso.weights <- 1 / abs(coef(object = cv.alasso.ridge, s = "lambda.min", exact = TRUE)[-1, 1])^(gamma)
cv.alasso.model <-
cv.glmnet(
x = x
,y = y
,alpha = alpha
,penalty.factor = cv.alasso.weights
)
cv.alasso.model
}
banana_data <-
"mybanana.txt" %>%
read_tsv()
pander(anova(banana_reg_02, banana_reg_01))
library(memisc, warn.conflicts = FALSE, quietly = TRUE)
install.packages(memisc)
install.packages('memisc')
library(memisc, warn.conflicts = FALSE, quietly = TRUE)
rsquare <- c()
for(i in 1:1000){
banana_cor <-
banana_data %>%
sample_n(10) %>%
select(
Weight
,Radius
,Length
# ,Circumference
) %>%
cor()
xy_vec <- banana_cor[2:3, 1]
C_mat <- banana_cor[2:3, 2:3]
rsquare[i] <- t(xy_vec) %*% solve(C_mat) %*% xy_vec
}
library(pander, warn.conflicts = FALSE, quietly = TRUE)
library(memisc, warn.conflicts = FALSE, quietly = TRUE)
library(DAAG, warn.conflicts = FALSE, quietly = TRUE)
library(glmnet, warn.conflicts = FALSE, quietly = TRUE)
library(tidyverse, warn.conflicts = FALSE, quietly = TRUE)
library(magrittr, warn.conflicts = FALSE, quietly = TRUE)
library(ggfortify, warn.conflicts = FALSE, quietly = TRUE)
library(knitr, warn.conflicts = FALSE, quietly = TRUE)
banana_cor <-
banana_data %>%
sample_n(10) %>%
select(
Weight
,Radius
,Length
# ,Circumference
) %>%
cor()
library(pander, warn.conflicts = FALSE, quietly = TRUE)
library(memisc, warn.conflicts = FALSE, quietly = TRUE)
library(DAAG, warn.conflicts = FALSE, quietly = TRUE)
library(glmnet, warn.conflicts = FALSE, quietly = TRUE)
library(tidyverse, warn.conflicts = FALSE, quietly = TRUE)
library(magrittr, warn.conflicts = FALSE, quietly = TRUE)
library(ggfortify, warn.conflicts = FALSE, quietly = TRUE)
library(knitr, warn.conflicts = FALSE, quietly = TRUE)
banana_cor <-
banana_data %>%
sample_n(10) %>%
select(
Weight
,Radius
,Length
# ,Circumference
) %>%
cor()
banana_data <-
banana_data %>%
mutate_at(
.vars = vars(Weight:Circumference)
,.funs = funs(log = log)
)
banana_reg_01 <-
banana_data %>%
lm(
Weight_log ~ Length_log + Radius_log + Circumference_log
,data = .
)
banana_reg_02 <-
banana_data %>%
lm(
Weight_log ~ Radius_log + Length_log
,data = .
)
banana_reg_03 <-
banana_data %>%
lm(
Weight_log ~ Radius_log
,data = .
)
banana_reg_04 <-
banana_data %>%
lm(
Weight_log ~ Length_log
,data = .
)
pander(summary(banana_reg_02))
# mtable123 <-
mtable(
"M1" = banana_reg_01
,"M2" = banana_reg_02
,"M3" = banana_reg_03
,"M4" = banana_reg_04
,summary.stats = c('R-squared','F','p','N')
)
# mtable123 <-
mtable(
"M1" = banana_reg_01
,"M2" = banana_reg_02
,"M3" = banana_reg_03
,"M4" = banana_reg_04
,summary.stats = c('R-squared','F','p','N')
) %>% pander()
mtable123 <-
mtable(
"M1" = banana_reg_01
,"M2" = banana_reg_02
,"M3" = banana_reg_03
,"M4" = banana_reg_04
,summary.stats = c('R-squared','F','p','N')
)
mtable123
pander(mtable123)
mtable123
toLatex(mtable123)
mtable123 <-
mtable(
"M1" = banana_reg_01
,"M2" = banana_reg_02
,"M3" = banana_reg_03
,"M4" = banana_reg_04
,summary.stats = c('R-squared','F','p','N')
)
toLatex(mtable123)
h
